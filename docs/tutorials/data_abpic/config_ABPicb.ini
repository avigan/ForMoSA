[config_path]
    # Path to the observed spectrum file
    observation_path = 'data_abpic/ABPicb_SINFONI_K.fits'

    # Path to store your interpolated grid
    adapt_store_path = 'data_abpic/adapted_grid/'

    # Path where you wish to store your results.
    result_path = 'data_abpic/outputs/'

    # Path of your initial grid of models
    model_path = '/Users/ppalmabifani/Desktop/exoAtm/c0_ForMoSA/INPUTS/atm_grids/atm_grids_native/EXOREM_native.nc'


[config_adapt]
    # Wavelength range used for the extraction of data and adaptation of the grid (separated windows can be defined).
    # Format : 'window1_min,window1_max / window2_min,window2_max / ... / windown_min,windown_max'
    wav_for_adapt = '1.9, 2.5'

    # Method used to adapt the synthetic spectra to the data.
    # example : 'by_reso' : A Gaussian law is convolved to the spectrum to decrease the resolution as a function of the
    # wavelength.
    #           'by_sample' : The spectrum is directly re-sampled to the wavelength grid of the data, using the module
    # python spectres.
    adapt_method = 'by_reso'

    # Custom target resolution to reach (optional). The final resolution will be the lowest between this custom resolution,
    # the resolution of the data, and the resolution of the models, for each wavelength.
    # Format : float or 'NA'
    custom_reso = 'NA'

    # Continuum subtraction. If a float is given, the value will give the approximated spectral resolution of the continuum.
    # Format : 'float' or 'NA'
    continuum_sub = 'NA'

    # Wavelength range used for the estimate of the continuum (separated windows can be defined).
    # Format : 'window1_max / window2_min,window2_max / ... / windown_min'
    # Note : the 'window1_min' and 'windown_max' are defined as the edges of 'wav_for_adapt'.
    # If the entire wavelength range defined by the parameter 'wav_for_adapt' needs to be continuum-subtracted: 'full'
    wav_for_continuum = 'NA'
    
    # Whether to use least square to estimate planetary and stellar contributions
    use_lsqr = 'False'


[config_inversion]
    # Method to calculate the loglikelihood function used in the nested sampling procedure
    # Format : 'chi2_classic' or 'CCF_Brogi' or 'CCF_Lockwood' or 'CCF_custom' (or 'chi2_covariance')
    # or /!\ 'logL_type1', 'logL_type2', ... for each observation when using MOSAIC
    logL_type = 'chi2_classic'

    # Wavelength range used for the fit during the nested sampling procedure (separated windows can be defined).
    # Format : 'window1_min,window1_max / window2_min,window2_max / ... / windown_min,windown_max'
    wav_fit = '1.9, 2.5'

    # Nested sampling algorithm used.
    # Format : 'nestle' or 'dynesty' or 'ultranest' (/!\ only nestle currently /!\)
    ns_algo = 'nestle'

    # Number of living points during the nested sampling procedure.
    # Format : 'integer'
    npoint = 100


[config_parameter]
    # Definition of the prior function of each parameter explored by the grid. Please refer to the documentation to check
    # the parameter space explore by each grid.
    # Format : "function", function_param1, function_param2
    # Example : "uniform", min, max
    #           "constant", value
    #           "gaussian", mu, sigma
    #           'NA' if the grid cover a lower number of parameters
    par1 = "uniform", 800, 2000
    par2 = "uniform", 2.5, 5.5
    par3 = "uniform", -0.1, 0.8
    par4 = "uniform", 0.3, 0.9
    par5 = 'NA'

    # Definition of the prior function of each extra-grid parameter. r is the radius (MJup, >0), d is the distance (pc, >0),
    # rv is the radial velocity (km.s-1), av is the extinction (mag), vsini is the projected rotational velocity (km.s-1, >0),
    # and ld is the limb darkening (0-1).
    # Format : "function", function_param1, function_param2
    # Example : "uniform", min, max
    #           "constant", value
    #           "gaussian", mu, sigma
    #           'NA' if you do not want to constrain this parameter
    r = 'NA' #"uniform", 0, 10
    d = 'NA' #"constant", 50.1
    rv = 'NA'
    alpha = 'NA'
    av = 'NA'
    vsini = 'NA'
    ld = 'NA'
    bb_T = 'NA' 
    bb_R = 'NA' 


[config_nestle]
    # For details on these parameters, please see: http://kylebarbary.com/nestle/index.html
    mechanic = 'static'     # Sampler “super-classes” of dynesty
    # e.g. 'static' / 'dynamic' # the number of living point is fixed / variates
    method = 'multi'        # Reduction of the parameters space
    # e.g. 'single' / 'multi' #single-ellipsoidal / multi-ellipsoidal
    maxiter = None          # Stopping criterions
    maxcall = None
    dlogz = None
    decline_factor = 0.1
    update_interval = None  # Divers
    npdim = None
    rstate = None
    callback = None

