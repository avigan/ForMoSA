.. _installation:

Installation
============

There are two possibilities to install ``ForMoSA``. 
Installation of the package through ``PyPI`` or through ``GitHub``. 


Create a conda environment
++++++++++++++++++++++++++

We strongly recommend using a ``conda`` environment. You can `learn more about conda here <https://conda.io/docs/user-guide/tasks/manage-environments.html>`_ .

(For all users)

You can create your environment as:

.. code-block:: console

    $ conda create -n env_formosa python=3.11
    $ conda activate env_formosa 

(For macOS users) 

To install and use our package in macOS with an M1 chip, a few extra steps are required. 
To use PyMultiNest to paralelize the processes, make sure you are building your conda environment under an OSX-ARM64 architecture. You can `learn more here <https://stackoverflow.com/questions/65415996/how-to-specify-the-architecture-or-platform-for-a-new-conda-environment-apple>`_ .

.. code-block:: console

    $ CONDA_SUBDIR=osx-arm64 conda create -n env_formosa python=3.11 numpy -c conda-forge
    $ conda activate env_formosa 
    $ conda config --env --set subdir osx-arm64



A. Installation though PyPI
+++++++++++++++++++++++++++

PyPI is the `pip package manager <https://packaging.python.org/tutorials/installing-packages/>`_, which will automatically install for you almost all the required dependencies in your environment.
To install the latest version run: 

.. code-block:: console

    $ pip install ForMoSA

To solve a standard error, run the following line in your environment:

.. code-block:: console

    $ conda install xarray dask netCDF4 bottleneck


B. Installation though GitHub
+++++++++++++++++++++++++++++

Install the following packages in your environment with pip install: 

.. code-block:: console  

    $ numpy
    $ matplotlib
    $ corner
    $ astropy
    $ scipy
    $ configobj
    $ extinction
    $ nestle
    $ PyAstronomy
    $ spectres
    $ pyyaml
    $ importlib-metadata==4.13.0
    $ xarray==2023.10.1

To solve a standard error, run the following line in your environment:

.. code-block:: console

    $ conda install xarray dask netCDF4 bottleneck

The last instalation step is to actually get ForMoSA. 
ForMoSA can be cloned from the main branch from our GitHub repository. 
You can do it by moving to the desired directory on your terminal and writing:

.. code-block:: console

    $ git clone https://github.com/exoAtmospheres/ForMoSA.git


For PyMultiNest users
+++++++++++++++++++++

If you want to use Pymultinest to run your inversion, follow the installation instructions from `PyMultinest <https://johannesbuchner.github.io/PyMultiNest/install.html>`_, detailed below. 

First, you need to clone PyMultinest from GitHub and install it.

.. code-block:: console

    $ git clone https://github.com/JohannesBuchner/PyMultiNest/
    $ cd PyMultiNest
    $ python setup.py install

Second, you need to corroborate that your system has a C++ and a Fortran interpreter. 
If you need to install brew, follow `these instructions <https://brew.sh/>`_.

.. code-block:: console

    $ brew install cmake
    $ brew install gcc
    $ brew install open-mpi

Next, in your ForMoSA environment, install mpi4pi as:

.. code-block:: console

    $ pip install mpi4py

Then, install MultiNest by cloning the GitHub repository and building it.
Make sure you empty the build folder if you run this step more than once.
    
.. code-block:: console

    $ git clone https://github.com/JohannesBuchner/MultiNest
    $ cd MultiNest/build
    $ cmake ..
    $ make

Finally, copy the files that were generated by building MultiNest onto your conda environment by doing:

.. code-block:: console

    $ cp -v ~/YOUR_PATH/MultiNest/lib/* /YOUR_PATH/opt/anaconda3/envs/env_formosa/lib/
	


Issues?
+++++++

If you run into any other problem, please create an issue on `GitHub <https://github.com/exoAtmospheres/ForMoSA/issues>`_.
