 _ _ _

13/12/2023 
Matthieu Ravet 

Comments:
    - First official release notes : Implementation of MOSAIC (Multimodal framework + likelihood functions).
    See /ForMoSA/DEMO/inputs/MOSAIC/ folder for more info

_ _ _ 

20/12/2023 
Matthieu Ravet 

Comments:
    - Correction of the os import in adapt/extraction_functions.py

_ _ _ 

21/12/2023 
Matthieu Ravet 

Comments:
    - No more covariance matrix if not provided in the impute observation file or if the covariance likelihood (chi2_covariance) is not used
    - Cleaner version of the covariances treatment during both the importation and the inversion
    - Correction of the importation of 'res_spectro' in adapt/extraction_functions.py
    - New function in main_utilities to compute the diagonal merging of covariance matrix (~ 100x faster)
    - Sorting of the glob.glob when using the MOSAIC (i.e. you can now number your observation files, ex: 1_obs1, 2_obs2, ...)

_ _ _ 

01/02/2024 
Matthieu Ravet 

Comments:
    - Addition of checkups for the likelihoods (continuum checkups for the CCF and iterative checkups for the logL loop)
    - Correction of the continuum substraction function to make it run with custom ranges
    - Changes of the num_sigma parameter in extraction_functions to not smooth to much the models during the resolution decrease

_ _ _ 

15/02/2024 
Matthieu Ravet 

Comments:
    - TEST BRANCH

_ _ _ 

19/02/2024 
Matthieu Ravet 

Comments:
    - Small correction in the rv and vsini loops (len(flx) != 0, if you run with photometry only, usefull for MOSAIC)

_ _ _ 

08/03/2024
Paulina Palma-Bifani

Comments: 
    - I've modified the readme to include PyMultinest installation instructions.
    I've modified the authors list and requirements too.
    - I've added the lines Matthieu wrote about PyMultinest run.
    - I've completed the docstrings for many functions. 
    - I've modified the prints to have a consistent style over the code. 
    - I'm working on adapting the plotting function to be consistent for: MOSAIC, pymultinest, have a fat-check plot generator, ect... 

_ _ _

08/03/2024
Simon Petrus

Comments:
    - adapt/extraction_functions.py -> I've corrected 2 bugs
    - nested_sampling/nested_sampling.py -> I've reformated the result file provided by nestle and PyMultinest.
    The output of these modules are saved with the extension RAW but a new dictionary is created with the name:
    "result_PACKAGE.pic" containing 5 arguments:
        - "samples": sample of the living points kept at each iteration.
        - "weights": weights of the living points kept at each iteration.
        - "logl": log(L) of the living points kept at each iteration.
        - "logvol": log(prior volume) of the living points kept at each iteration.
        - "logz": the evidence and its error [log(Z), log(Z)_err]
        I notice that the result "h" is not saved anymore.
    This dictionary is used in the plotting Class.
    - plotting/plotting_class.py: I have adapted each function to make them enable to call/read the dictionary
    "result_PACKAGE.pic".

_ _ _

15/03/2024
Matthieu Ravet

Comments:
    - Correction of photometry importation in extraction_functions by putting it out of the selection windows
    - Parameter name changes :
            * obs_cut >> obs_spectro
            * obs_pho >> obs_photo
            * obs_cut_ins >> obs_spectro_ins
            * obs_pho_ins >> obs_photo_ins

            * obs_merge >> obs_spectro_merge
    > These name changes have been applied in extraction_functions, nested_sampling and plotting_class

    - Replacement of X = [] and X = np.zeros(len(Y)) by X = np.asaray([]) when possible to homogenize the code and speed-up the inversion
    - obs_spectro now store the optional parameters inv_cov, trans_obs and star_flx for more clarity
    - Removal of obs_merge_ins during when saving the spectrum_obs as it is not needed (and the instrument can still be access via obs_spectro_ins)
    - Use of X = np.asarray(X, dtype=object) for each list X containing multiple objects of different sizes for storage (usefull when we'll want
    to add more optional inputs)

Test that have been done to checkup the changes:
    - With/without spectral windows ✓
    - With/without continuum substraction ✓
    - With/without spectral covariances ✓
    - With/without photometry ✓
    - With/without NANs ✓
    - With/without MOSAIC ✓
    - With/without trans_obs and star_flx ✓

_ _ _

18/03/2024
Matthieu Ravet

Comments:
    - Keeping the optional arrays separated for storage to not slow down the grid extraction and adaptation by creating
    a separate array:
            * "obs_opt" for the optional observational arrays (cov, star_flx and trans_obs at the moment)
    - Correction of the functions names and imports in nested_sampling, plotting_class
    
_ _ _

05/04/2024
Matthieu Ravet

Comments:
    - NEW: addition of a new extrat-grid parameter, alpha. This parameter is usefull when you assume your datasets are poorly calibrated. It
    has the effect of an additionnal scaling factor ck = alpha * (R/d)**2 that can be set differently with different observations.
        FORMAT: * alpha = 'NA' # If you don't want to use it
                * alpha = 'prior', float, float # If you want to use it with a given 'prior' and range
                * alpha = 'prior_1', float_1, float_1, 'prior_2', float_2, float_2, ..., 'prior_n', float_n, float_n when using n observation in MOSAIC
    => updates of the plotting functions to take this new parameter into account
    - NEW: adaptation of the plotting functions:
                * possibility of plotting MOSAIC outputs
                * new arguments in plot_fit :
                            trans:      'yes' or 'no' to plot transmision curves for photometry
                            logx:       'yes' or 'no' to plot the wavelength in log scale
                            logy:       'yes' or 'no' to plot the flux in log scale
                            norm:       'yes' or 'no' to plot the normalized spectra (usefull for MOSAIC)
    - NEW: the DEMO file has been updated with the recent changes

Test that have been done to checkup the changes:
    - Classical with/without alpha ✓
    - MOSAIC with/without alpha ✓
    - Classical and MOSAIC with/without photometry ✓
    - With/without all new plotting options ✓


Note: alpha parameter is strongly correlated to R and d => need to be carefull about the physical interpretations. Inversion time is greatly lengthen
with this new parameter when using MOSAIC
    
_ _ _

30/04/2024
Matthieu Ravet

Comments:
    - Note : be carefull when using a small wavelength range to estimate the continuum (it is impossible if less than 2 points end up in the
    range for the interpolation...)
    - Corrections :
                * The 'wav_for_adapt' parameter did not work due to numpy not accepting different size arrays when storing them with
                'np.savez'. This has been corrected by replacing the importation list by array in 'extraction_functions' and adding lines
                to transform them in 'dtype=object' when saving.
                * The output grid were still called grid_merge and grid_phot. This has been replaced by 'grid_spectro' and 'grid_photo'
                accordingly to match the file names in the code.
    - NEWS :
                * MOSAIC is now fully integrated in the classical mode => no more 'observation_format' parameter. The only change when using
                the classical (only one obs) is that you need to specify the path where this observation is (i.e. /home/mravet/Documents/These/FORMOSA/INPUTS/GRAVITY/).
                The 'multiply_transmission' and 'star_data' have been removed from the config file as they will be automatically imported if
                provided in the .fits file (see below). All other parameters should work as usuall.
                * The radial velocity can now be fitted individually for different obs in the loop. The format is the same as for 'alpha' (see above notes).
                * The extra-grid parameters that can be fitted individually for each obs have 2 options :
                    1) If you put 1 set of values (either 'NA' or 'prior', x, y), it will be the same for all datasets
                    2) If you put N sets of values ('NA' or priors according to the obs), it will use separate ones for each datasets
                * The input format has be normalized to :
                        > 'WAV'
                        > 'FLX'
                        > 'ERR (or COV, optional)
                        > 'INS'
                        > 'RES'
                        > ('TRANSM', optional)
                        > ('STAR FLX', optional)
                * The DEMO config.ini as been updated accordingly


Test that have been done to checkup the changes:
    - 1 obs with/without alpha ✓
    - 1 obs with/without rv ✓
    - 1 obs with/without continuum substraction (multi/single continuum/adapt windows) ✓
    - 1 obs with/without custom reso ✓
    - 1 obs with/without wav_for_adapt windows ✓
    - 1 obs with/without wav_fit windows ✓
    - 1 obs with cov and chi2 classic logL ✓
    - HiRISE ✓
    - photometry ✓
    - all plotting options ✓
    - multiple observations (with the above tests) ✓
    - multiple observations with multiple alpha and rv ✓
    
_ _ _

12/05/2024

Paulina Palma-Bifani

Comments:
    - This is the official date of the release 2.0.0 in Pipy in preparation for the ForM-X workshop.